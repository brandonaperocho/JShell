package test;

import static org.junit.Assert.*;

import org.junit.Before;
import a2.*;
import org.junit.Test;

public class GetFullPathTest {
  Directory d1, d2, d3, d4, d5;
  File f1, f2, f3, f4, f5;
  // String that is to match the output
  String expected;
  // Set up and create the files and directories
  @Before
  public void setUp() {
    d1 = new Directory();
    d2 = new Directory("Sports", d1);
    d1.addDirectory(d2);
    d3 = new Directory("Games", d1);
    d1.addDirectory(d3);
    d4 = new Directory("Rules", d2);
    d2.addDirectory(d4);
    d5 = new Directory("Fans", d4);
    d4.addDirectory(d5);
    f1 = new File("Soccer", d2, "11v11 90minute games");
    f2 = new File("Hockey", d4, "6v6 60minute games");
    f3 = new File("LoL", d3, "Bunch of feeders.");
    f4 = new File("RootFile", d1, "It's like a root of a tree.");
    f5 = new File("Leafs", d5, "Delussional!");
    d2.addFile(f1);
    d4.addFile(f2);
    d3.addFile(f3);
    d1.addFile(f4);
    d5.addFile(f5);
  }
  
  @Test
  public void test() {
    GetFullPath temp = new GetFullPath(d3, "LoL");
    expected = "/Games/LoL";
    assertEquals(expected, temp.getWithLast());
  }
  @Test
  public void test2() {
    GetFullPath temp = new GetFullPath(d1, "/Sports/Rules/Hockey");
    expected = "/Sports/Rules";
    assertEquals(expected, temp.getWithoutLast());
  }
  @Test
  public void test3() {
    GetFullPath temp = new GetFullPath(d2, "Rules/Hockey/Fans/Leafs");
    expected = "/Sports/Rules/Hockey/Fans/Leafs";
    assertEquals(expected, temp.getWithLast());
  }
  @Test
  public void test4() {
    GetFullPath temp = new GetFullPath(d2, "Rules/Hockey/Fans/Leafs");
    expected = "/Sports/Rules/Hockey/Fans";
    assertEquals(expected, temp.getWithoutLast());
  }
  @Test
  public void test5() {
    GetFullPath temp = new GetFullPath(d2, "Rules/Hockey/Fans/Leafs");
    expected = "Leafs";
    assertEquals(expected, temp.getLast());
  }
  @Test
  public void test6() {
    GetFullPath temp = new GetFullPath(d2, "/Sports/../.");
    expected = "/Sports/../.";
    assertEquals(expected, temp.getWithLast());
  }
}
